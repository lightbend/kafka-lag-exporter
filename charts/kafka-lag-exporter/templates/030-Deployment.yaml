apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "kafka-lag-exporter.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "kafka-lag-exporter.name" . }}
    helm.sh/chart: {{ include "kafka-lag-exporter.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kafka-lag-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kafka-lag-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "kafka-lag-exporter.fullname" . }}-serviceaccount
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: KAFKA_LAG_EXPORTER_PORT
              value: "{{ .Values.service.port }}"
            - name: KAFKA_LAG_EXPORTER_POLL_INTERVAL_SECONDS
              value: "{{ .Values.pollIntervalSeconds }} seconds"
            - name: KAFKA_LAG_EXPORTER_CLIENT_GROUP_ID
              value: "{{ .Values.clientGroupId }}"
            - name: KAFKA_LAG_EXPORTER_LOG_LEVEL
              value: "{{ .Values.logLevel }}"
            - name: KAFKA_LAG_EXPORTER_KAFKA_LOG_LEVEL
              value: "{{ .Values.kafkaLogLevel }}"
            - name: KAFKA_LAG_EXPORTER_KAFKA_CLIENT_TIMEOUT_SECONDS
              value: "{{ .Values.kafkaClientTimeoutSeconds }} seconds"
            - name: KAFKA_LAG_EXPORTER_STRIMZI
              value: "{{ .Values.watchers.strimzi }}"
            {{- range $index, $cluster := .Values.clusters }}
            - name: "KAFKA_LAG_EXPORTER_CLUSTERS.{{ $index }}.name"
              value: "{{ $cluster.name }}"
            - name: "KAFKA_LAG_EXPORTER_CLUSTERS.{{ $index }}.bootstrap-brokers"
              value: "{{ $cluster.bootstrapBrokers }}"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
